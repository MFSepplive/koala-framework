'use strict';
const fs = require('fs');
const webpack = require('webpack');
const Config = require('webpack-config').Config;
const CommonsChunkPlugin = require("webpack/lib/optimize/CommonsChunkPlugin");

const TrlHtmlWebpackPlugin = require('../trl/trl-html-webpack-plugin');
const fetchLanguages = require("../loader/fetch-languages");
const fetchKwfConfig = require("./fetch-kwf-config");

const kwfConfig = fetchKwfConfig();

const devBuild = !!process.env.KWF_BUILD_DEV;

let entry = {
    Admin: [
        require.resolve('../loader/ini-loader')+'?dep=AdminMain!'
    ],
    Frontend: [
        'core-js/es6/promise',
        require.resolve('../loader/ini-loader')+'?dep=Frontend!',
    ]
};
if (kwfConfig['webpack-dev-server-url'] && devBuild) {
    entry.Frontend.push('webpack-dev-server/client?'+kwfConfig['webpack-dev-server-url']);
}


const languages = fetchLanguages();

let plugins = [];

languages.forEach(language => {
    plugins.push(new TrlHtmlWebpackPlugin({
        filename: 'Frontend.'+language+'.html',
        chunks: ['Frontend'],
        templateContent: '',
        inject: 'head',
        language: language,
        hash: true
    }));

    plugins.push(new TrlHtmlWebpackPlugin({
        filename: 'Admin.'+language+'.html',
        chunks: ['Frontend', 'Admin'],
        templateContent: '',
        inject: 'head',
        language: language,
        hash: true
    }));
});


module.exports = new Config().extend(require.resolve('./webpack.kwf.config')).merge({
    entry: entry,
    plugins: plugins
});
